{"version":3,"file":"static/js/130.46a02810.chunk.js","mappings":"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","sources":["KEY/movieKey.js","components/Error/PageNotFound.styled.jsx","components/Error/PageNotFound.jsx","components/Loading/SpinnersLoader.styled.jsx","components/Loading/SpinnersLoader.jsx","components/Utils/checkPoster.js","components/API/completeInformationAboutFilmApi.js","components/Loading/LoaderMovieDetails.jsx","components/Utils/convertGenres.js","pages/Movies/MovieDetails.styled.jsx","pages/Movies/MovieDetails.jsx"],"sourcesContent":["export const API_KEY = '9d066fb5d369339a2028c12c4ce620f2';\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const ImageError = styled.img`\n  margin: 0 auto;\n`;\n","import notFound from '../Img/pngwing.com (1).png';\nimport { ImageError, Wrapper } from './PageNotFound.styled';\n\nconst PageNotFound = () => {\n  return (\n    <Wrapper>\n      <ImageError src={notFound} width=\"350\" alt=\"PageNotFound\" />\n    </Wrapper>\n  );\n};\n\nexport default PageNotFound;\n","import styled from '@emotion/styled';\n\nimport { PropagateLoader } from 'react-spinners';\n\nexport const PropagateLoaderSt = styled(PropagateLoader)`\n  margin: 0 auto;\n`;\n\nexport const WrapperSpin = styled.div`\n  display: flex;\n\n  padding-top: 40px;\n`;\n","import { WrapperSpin, PropagateLoaderSt } from './SpinnersLoader.styled';\n\nconst SpinnersLoader = () => {\n  return (\n    <WrapperSpin>\n      <PropagateLoaderSt color=\"#36d7b7\" />\n    </WrapperSpin>\n  );\n};\n\nexport default SpinnersLoader;\n","import defaultPoster from '../Img/no-poster-available.jpg';\n\nconst checkPoster = img => {\n  if (!img) {\n    return defaultPoster;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport default checkPoster;\n","import axios from 'axios';\nimport { API_KEY } from '../../KEY/movieKey';\n\nconst fetchCompleteInformationAboutFilmApi = async movie_Id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_Id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return response.data;\n};\n\nexport default fetchCompleteInformationAboutFilmApi;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst LoaderMovieDetails = props => (\n  <ContentLoader\n    viewBox=\"0 0 600 550\"\n    width={600}\n    height={550}\n    title=\"Loading news...\"\n    {...props}\n  >\n    <rect x=\"42.84\" y=\"9.93\" rx=\"5\" ry=\"5\" width=\"300\" height=\"450\" />\n    <rect x=\"360\" y=\"40\" rx=\"0\" ry=\"0\" width=\"148.72\" height=\"15\" />\n    <rect x=\"360\" y=\"40\" rx=\"0\" ry=\"0\" width=\"89\" height=\"9\" />\n    <rect x=\"360\" y=\"70\" rx=\"0\" ry=\"0\" width=\"89\" height=\"10\" />\n    <rect x=\"360\" y=\"150\" rx=\"0\" ry=\"0\" width=\"600\" height=\"10\" />\n  </ContentLoader>\n);\n\nLoaderMovieDetails.metadata = {\n  name: 'Arthur FalcÃ£o',\n  github: 'arthurfalcao',\n  description: 'News List',\n  filename: 'News',\n};\n\nexport default LoaderMovieDetails;\n","const convertGenres = item => {\n  let stack = [];\n\n  item.map(({ name }) => stack.push(name));\n  return stack.join(', ');\n};\n\nexport default convertGenres;\n","import styled from '@emotion/styled';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const BgGradient = styled.div`\n  padding-top: 15px;\n  background-image: linear-gradient(\n    to right,\n    rgba(52.5, 52.5, 73.5, 1) calc((50vw - 170px) - 340px),\n    rgba(52.5, 52.5, 73.5, 0.84) 50%,\n    rgba(52.5, 52.5, 73.5, 0.84) 100%\n  );\n`;\nexport const ContainerWrapperBgImage = styled.div`\n  /* border: 2px solid rgb(0, 13, 255); */\n\n  border-bottom: 1px solid rgb(67, 67, 67);\n  background-size: cover;\n  background-position: left calc((50vw - 170px) - 340px) top;\n  background-repeat: no-repeat;\n  background-image: ${props => `url(${props.img})`};\n`;\n\nexport const ContainerCard = styled.div`\n  padding: 8px;\n\n  padding-top: 20px;\n\n  padding-left: 40px;\n  padding-right: 40px;\n  padding-bottom: 40px;\n\n  display: flex;\n`;\n\nexport const WrapperInfo = styled.div`\n  color: #ffffff;\n  display: flex;\n`;\n\nexport const SectionInfo = styled.section`\n  /* border: 2px solid rgb(0, 13, 255); */\n  padding: 15px;\n`;\n\nexport const ImgWrapper = styled.div`\n  display: block;\n  min-width: 300px;\n  width: 300px;\n  height: 450px;\n`;\n\nexport const Img = styled.img`\n  min-width: 100%;\n  width: 100%;\n  height: 100%;\n  outline: none;\n  display: block;\n`;\n\nexport const SectionLink = styled.div`\n  padding-top: 10px;\n  padding-bottom: 20px;\n`;\n\nexport const UlLink = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 10%;\n`;\n\nexport const LinkSt = styled(NavLink)`\n  /* display: inline-block; */\n\n  text-decoration: none;\n  /* color: #ffffff; */\n\n  ///////////\n  position: relative;\n  margin: auto;\n  padding: 12px 18px;\n  transition: all 0.2s ease;\n  border: none;\n  background: none;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    border-radius: 50px;\n    background: #b1dae7;\n    width: 45px;\n    height: 45px;\n    transition: all 0.3s ease;\n  }\n  span {\n    position: relative;\n    font-family: 'Ubuntu', sans-serif;\n    font-size: 18px;\n    font-weight: 700;\n    letter-spacing: 0.05em;\n    color: #234567;\n  }\n  svg {\n    position: relative;\n    top: 0;\n    margin-left: 10px;\n    fill: none;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke: #234567;\n    stroke-width: 2;\n    transform: translateX(-5px);\n    transition: all 0.3s ease;\n  }\n  :hover:before {\n    width: 100%;\n    background: #b1dae7;\n  }\n  :hover svg {\n    transform: translateX(0);\n    transform: rotate(0.25turn);\n  }\n  &.active {\n    transform: scale(0.95);\n\n    svg {\n      transform: translateX(0);\n      transform: rotate(0.25turn);\n    }\n    :before {\n      width: 100%;\n      background: #b1dae7;\n    }\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  text-decoration: none;\n  color: #ffffff;\n  margin-left: 25px;\n  border: 2px solid rgb(255, 255, 255);\n  padding: 5px;\n  display: inline-flex;\n  border-radius: 8px;\n  transition: all 0.4s ease;\n\n  :hover {\n    color: #234567;\n    border: 2px solid #b1dae7;\n    background-color: #b1dae7;\n  }\n  :hover svg {\n    transform: scale(1.2);\n  }\n`;\n\nexport const AiOutlineArrowLeftSt = styled(AiOutlineArrowLeft)`\n  padding-right: 8px;\n  width: 18px;\n  height: 18px;\n`;\n","import { useRef, Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport fetchCompleteInformationAboutFilmApi from 'components/API/completeInformationAboutFilmApi';\n\nimport checkPoster from 'components/Utils/checkPoster';\nimport PageNotFound from 'components/Error/PageNotFound';\nimport SpinnersLoader from 'components/Loading/SpinnersLoader';\nimport LoaderMovieDetails from 'components/Loading/LoaderMovieDetails';\nimport convertGenres from 'components/Utils/convertGenres';\n\nimport {\n  ContainerWrapperBgImage,\n  ContainerCard,\n  WrapperInfo,\n  SectionInfo,\n  ImgWrapper,\n  Img,\n  BgGradient,\n  LinkSt,\n  BackLink,\n  SectionLink,\n  UlLink,\n  AiOutlineArrowLeftSt,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n\n  const beckLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    if (!moviesId) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchCompleteInformationAboutFilmApi(moviesId);\n\n        setItems(response);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [moviesId]);\n\n  const { title, poster_path, overview, genres, vote_average, backdrop_path } =\n    items;\n\n  const voteAverage = Math.ceil(vote_average * 10);\n\n  return (\n    <div>\n      <ContainerWrapperBgImage\n        img={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n      >\n        <BgGradient>\n          {error && <PageNotFound />}\n\n          {isLoading && <LoaderMovieDetails />}\n\n          {!error && !isLoading && (\n            <>\n              <BackLink to={beckLinkLocationRef.current}>\n                <AiOutlineArrowLeftSt />\n                <span>Go back</span>\n              </BackLink>\n              <ContainerCard>\n                <ImgWrapper>\n                  <Img\n                    loading=\"lazy\"\n                    src={checkPoster(poster_path)}\n                    alt={title}\n                  />\n                </ImgWrapper>\n                <WrapperInfo>\n                  <SectionInfo>\n                    <h1>{title}</h1>\n\n                    <p>User Scope: {voteAverage}%</p>\n                    <h2>Overview</h2>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    {genres && <span>{convertGenres(genres)}</span>}\n                  </SectionInfo>\n                </WrapperInfo>\n              </ContainerCard>\n            </>\n          )}\n        </BgGradient>\n      </ContainerWrapperBgImage>\n      {!error && (\n        <SectionLink>\n          <nav>\n            <UlLink>\n              <li>\n                <LinkSt to=\"cast\">\n                  <span>Cast</span>\n                  <svg viewBox=\"0 0 13 10\" height=\"10px\" width=\"15px\">\n                    <path d=\"M1,5 L11,5\"></path>\n                    <polyline points=\"8 1 12 5 8 9\"></polyline>\n                  </svg>\n                </LinkSt>\n              </li>\n              <li>\n                <LinkSt to=\"reviews\">\n                  <span>Reviews</span>\n                  <svg viewBox=\"0 0 13 10\" height=\"10px\" width=\"15px\">\n                    <path d=\"M1,5 L11,5\"></path>\n                    <polyline points=\"8 1 12 5 8 9\"></polyline>\n                  </svg>\n                </LinkSt>\n              </li>\n            </UlLink>\n          </nav>\n\n          <Suspense fallback={<SpinnersLoader />}>\n            <Outlet />\n          </Suspense>\n        </SectionLink>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","Wrapper","styled","ImageError","src","notFound","width","alt","PropagateLoaderSt","PropagateLoader","WrapperSpin","color","img","defaultPoster","fetchCompleteInformationAboutFilmApi","movie_Id","axios","params","api_key","response","data","LoaderMovieDetails","props","viewBox","height","title","x","y","rx","ry","metadata","name","github","description","filename","item","stack","map","push","join","BgGradient","ContainerWrapperBgImage","ContainerCard","WrapperInfo","SectionInfo","ImgWrapper","Img","SectionLink","UlLink","LinkSt","NavLink","BackLink","AiOutlineArrowLeftSt","AiOutlineArrowLeft","useState","items","setItems","isLoading","setIsLoading","error","setError","location","useLocation","beckLinkLocationRef","useRef","state","from","moviesId","useParams","useEffect","fetchData","poster_path","overview","genres","vote_average","backdrop_path","voteAverage","Math","ceil","PageNotFound","to","current","loading","checkPoster","convertGenres","d","points","Suspense","fallback","SpinnersLoader"],"sourceRoot":""}